[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "drycli"
dynamic = ["version"]
description = "DRY (Don't Repeat Yourself) CLI - Define your CLI once with Pydantic models"
authors = [{name = "Tyler House", email = "26489166+tahouse@users.noreply.github.com"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: System Shells",
    "Topic :: Utilities",
]
keywords = ["cli", "pydantic", "click", "dry", "configuration", "type-safe"]
dependencies = [
    "click>=8.0",
    "pydantic>=2.0",
    "annotated-types>=0.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov",
    "pytest-xdist",  # Parallel test execution
    "ruff",
    "mypy",
    "build",
    "twine",
    "setuptools-scm>=8.0",  # Version management from git tags
    "pre-commit",    # Pre-commit hooks for quality gates
    "safety",        # Security vulnerability scanning
    "bandit[toml]",  # Security linting
]
test = [
    "pytest>=6.0",
    "pytest-cov",
    "pytest-xdist",
]

[project.urls]
Homepage = "https://github.com/tahouse/drycli"
Repository = "https://github.com/tahouse/drycli"
Issues = "https://github.com/tahouse/drycli/issues"
Documentation = "https://github.com/tahouse/drycli#readme"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
drycli = ["py.typed"]

[tool.black]
line-length = 88
target-version = ['py38']

[tool.ruff]
target-version = "py38"
line-length = 88
extend-exclude = [
    "src/drycli/_version.py",  # Auto-generated by setuptools-scm
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.setuptools_scm]
# Get version from git tags
write_to = "src/drycli/_version.py"
fallback_version = "0.0.1.dev0"
# Configure version string that includes git info in metadata
version_scheme = "post-release"
local_scheme = "no-local-version"
